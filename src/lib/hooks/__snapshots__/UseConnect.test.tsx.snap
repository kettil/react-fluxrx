// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Check the useConnect hook it should be return the element with merge props when the element is created: json 1`] = `
<input
  onClick={[Function]}
  type="text"
  value={42}
/>
`;

exports[`Check the useConnect hook it should be return the element with merge props when the element is created: results 1`] = `
Array [
  Object {
    "onClick": [Function],
    "type": "text",
    "value": 42,
  },
]
`;

exports[`Check the useConnect hook it should be the element is recreated when element is updated with new props: json 1`] = `
<input
  onClick={[Function]}
  type="text"
  value={42}
/>
`;

exports[`Check the useConnect hook it should be the element is recreated when element is updated with new props: json 2`] = `
<input
  onClick={[Function]}
  type="number"
  value={42}
/>
`;

exports[`Check the useConnect hook it should be the element is recreated when element is updated with new props: results 1`] = `
Array [
  Object {
    "onClick": [Function],
    "type": "text",
    "value": 42,
  },
  Object {
    "onClick": [Function],
    "type": "text",
    "value": 42,
  },
  Object {
    "onClick": [Function],
    "type": "number",
    "value": 42,
  },
]
`;

exports[`Check the useConnect hook it should be the element is recreated when element is updated with same props: json 1`] = `
<input
  onClick={[Function]}
  type="text"
  value={42}
/>
`;

exports[`Check the useConnect hook it should be the element is recreated when element is updated with same props: json 2`] = `
<input
  onClick={[Function]}
  type="text"
  value={42}
/>
`;

exports[`Check the useConnect hook it should be the element is recreated when element is updated with same props: results 1`] = `
Array [
  Object {
    "onClick": [Function],
    "type": "text",
    "value": 42,
  },
  Object {
    "onClick": [Function],
    "type": "text",
    "value": 42,
  },
]
`;

exports[`Check the useConnect hook it should be the element is recreated when the state is updated (new value): json 1`] = `
<input
  onClick={[Function]}
  type="text"
  value={42}
/>
`;

exports[`Check the useConnect hook it should be the element is recreated when the state is updated (new value): json 2`] = `
<input
  onClick={[Function]}
  type="text"
  value={13}
/>
`;

exports[`Check the useConnect hook it should be the element is recreated when the state is updated (new value): results 1`] = `
Array [
  Object {
    "onClick": [Function],
    "type": "text",
    "value": 42,
  },
  Object {
    "onClick": [Function],
    "type": "text",
    "value": 13,
  },
]
`;

exports[`Check the useConnect hook it should be the element is recreated when the state is updated (same reference): json 1`] = `
<input
  onClick={[Function]}
  type="text"
  value={42}
/>
`;

exports[`Check the useConnect hook it should be the element is recreated when the state is updated (same reference): json 2`] = `
<input
  onClick={[Function]}
  type="text"
  value={42}
/>
`;

exports[`Check the useConnect hook it should be the element is recreated when the state is updated (same reference): results 1`] = `
Array [
  Object {
    "onClick": [Function],
    "type": "text",
    "value": 42,
  },
]
`;

exports[`Check the useConnect hook it should be the element is recreated when the state is updated (same value but diff reference): json 1`] = `
<input
  onClick={[Function]}
  type="text"
  value={42}
/>
`;

exports[`Check the useConnect hook it should be the element is recreated when the state is updated (same value but diff reference): json 2`] = `
<input
  onClick={[Function]}
  type="text"
  value={42}
/>
`;

exports[`Check the useConnect hook it should be the element is recreated when the state is updated (same value but diff reference): results 1`] = `
Array [
  Object {
    "onClick": [Function],
    "type": "text",
    "value": 42,
  },
]
`;
